import { ApiInterfaceRx } from '@polkadot/api/types';
import { AccountId, Keys } from '@polkadot/types/interfaces';
import { ITuple } from '@polkadot/types/types';
import { DeriveStakingQuery } from '../types';
import { Observable } from 'rxjs';
import { Vec } from '@polkadot/types';
export declare function queryWithQueued(api: ApiInterfaceRx): (accountId: Uint8Array | string, queuedKeys: Vec<ITuple<[AccountId, Keys]>>) => Observable<DeriveStakingQuery>;
/**
 * @description From a stash, retrieve the controllerId and all relevant details
 */
export declare function query(api: ApiInterfaceRx): (accountId: Uint8Array | string) => Observable<DeriveStakingQuery>;
export declare function queryMulti(api: ApiInterfaceRx): (accountIds: (Uint8Array | string)[]) => Observable<DeriveStakingQuery[]>;
